import numpy as np
import acepy as ap

# %% Simple Problem

it = np.inf
V = np.array([[1,1,4],[5,3,5],[6,4,7],[6,4,1],[6,5,4],[6,7,3]])
stat = [np.mean(V,axis=0),np.std(V,axis=0,ddof=1)]
resp = np.array([6,8,6,7,5,4])

V = (V-stat[0])/stat[1]
lars1 = ap.angle(V,resp,stat,it)
lasso1 = ap.shrink(V,resp,stat,it)

# %% Longley Problem

it = np.inf
V = np.zeros((16,6))
V[0,:]  = [83.00,234289,2356,1590,107608,1947]
V[1,:]  = [88.50,259426,2325,1456,108632,1948]
V[2,:]  = [88.20,258054,3682,1616,109773,1949]
V[3,:]  = [89.50,284599,3351,1650,110929,1950]
V[4,:]  = [96.20,328975,2099,3099,112075,1951]
V[5,:]  = [98.10,346999,1932,3594,113270,1952]
V[6,:]  = [99.00,365385,1870,3547,115094,1953]
V[7,:]  = [100.0,363112,3578,3350,116219,1954]
V[8,:]  = [101.2,397469,2904,3048,117388,1955]
V[9,:]  = [104.6,419180,2822,2857,118734,1956]
V[10,:] = [108.4,442769,2936,2798,120445,1957]
V[11,:] = [110.8,444546,4681,2637,121950,1958]
V[12,:] = [112.6,482704,3813,2552,123366,1959]
V[13,:] = [114.2,502601,3931,2514,125368,1960]
V[14,:] = [115.7,518173,4806,2572,127852,1961]
V[15,:] = [116.9,554894,4007,2827,130081,1962]
resp = [60323,61122,60171,61187,63221,63639,64989,63761,66019,67857,68169,66513,68655,69564,69331,70551]
stat = [np.mean(V,axis=0),np.std(V,axis=0,ddof=1)]

V = (V-stat[0])/stat[1]
lars2 = ap.angle(V,resp,stat,it)
lasso2 = ap.shrink(V,resp,stat,it)

# %% Solutions

sol1 = [7.04798,0.761619,-1.08508,-0.128936]
sol2 = [-3482258.634595,15.06187227137,-0.0358191792925,-2.020229803816,-1.033226867173,-0.05110410565358,1829.151464613]

lars1 = np.allclose(lars1,sol1)
lars2 = np.allclose(lars2,sol2)
lasso1 = np.allclose(lasso1,sol1)
lasso2 = np.allclose(lasso2,sol2)